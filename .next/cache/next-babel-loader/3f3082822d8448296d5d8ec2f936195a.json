{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/p0a00a6/Documents/test/cvid/components/CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Autocomplete from \"@material-ui/core/Autocomplete\";\nimport { useStats } from \"../hooks/useStats\";\nexport default function CountrySelector(props) {\n  var countries = useStats(\"https://covid19.mathdro.id/api/countries\");\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Loading countries...\");\n  return __jsx(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Countries\"), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return props.setSelectedCountry(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(function (_ref, index) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        country = _ref2[0],\n        code = _ref2[1];\n\n    return __jsx(\"option\", {\n      key: \"code_\".concat(index),\n      value: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, country);\n  })), __jsx(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: top100Films,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.title;\n    },\n    style: {\n      width: 300\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Combo box\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/p0a00a6/Documents/test/cvid/components/CountrySelector.js"],"names":["Autocomplete","useStats","CountrySelector","props","countries","e","setSelectedCountry","target","value","Object","entries","map","index","country","code","top100Films","option","title","width","params"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,gCAAzB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,MAAMC,SAAS,GAAGH,QAAQ,CAAC,0CAAD,CAA1B;AACA,MAAI,CAACG,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AAEhB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAIF,KAAK,CAACG,kBAAN,CAAyBD,CAAC,CAACE,MAAF,CAASC,KAAlC,CAAJ;AAAA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,OAAP,CAAeN,SAAS,CAACA,SAAzB,EAAoCO,GAApC,CAAwC,gBAAkBC,KAAlB;AAAA;AAAA,QAAEC,OAAF;AAAA,QAAWC,IAAX;;AAAA,WACvC;AAAQ,MAAA,GAAG,iBAAUF,KAAV,CAAX;AAA8B,MAAA,KAAK,EAAEE,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OADH,CADuC;AAAA,GAAxC,CADH,CAFF,EAUE,MAAC,YAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,OAAO,EAAEE,WAFX;AAGE,IAAA,cAAc,EAAE,wBAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,KAAX;AAAA,KAHxB;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAJT;AAKE,IAAA,WAAW,EAAE,qBAAAC,MAAM;AAAA,aACjB,MAAC,SAAD,eAAeA,MAAf;AAAuB,QAAA,KAAK,EAAC,WAA7B;AAAyC,QAAA,OAAO,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADiB;AAAA,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAuBD","sourcesContent":["import Autocomplete from \"@material-ui/core/Autocomplete\";\nimport { useStats } from \"../hooks/useStats\";\n\nexport default function CountrySelector(props) {\n  const countries = useStats(\"https://covid19.mathdro.id/api/countries\");\n  if (!countries) return <p>Loading countries...</p>;\n\n  return (\n    <section>\n      <p>Countries</p>\n      <select onChange={e => props.setSelectedCountry(e.target.value)}>\n        {Object.entries(countries.countries).map(([country, code], index) => (\n          <option key={`code_${index}`} value={code}>\n            {country}\n          </option>\n        ))}\n      </select>\n\n      <Autocomplete\n        id=\"combo-box-demo\"\n        options={top100Films}\n        getOptionLabel={option => option.title}\n        style={{ width: 300 }}\n        renderInput={params => (\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\n        )}\n      />\n      {/* <Stats uri={`countries/${code}`} /> */}\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}